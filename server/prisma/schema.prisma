// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  phone       String    @unique
  location    String
  serviceId   Int
  amountDue   Float?    @default(0.0)
  service     Service   @relation(fields: [serviceId],references: [id])
  technicians Technician[]
}

model Technician {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique
  phone       String    @unique
  photo       String
  location    String
  companyId   Int
  status      Boolean   @default(true)
  reviews     Review[]
  rating      Float?    @default(5.0)
  company     Company   @relation(fields: [companyId], references: [id])
  leads       Lead[]
}

model Review {
  id              Int       @id @default(autoincrement())
  description     String
  rating          Float  @default(5.0)
  technicianId Int
  technician Technician @relation(fields: [technicianId], references: [id])
}

model User {
  id    Int    @id @default(autoincrement())
  firstName  String
  lastName   String
  email String @unique
  phone String @unique
  leads Lead[]
}

model Lead {
  id               Int             @id @default(autoincrement())
  userId           Int
  technicianId     Int
  location         String
  date             DateTime?       @default(now())
  user             User            @relation(fields: [userId], references: [id])
  technician  Technician @relation(fields: [technicianId], references: [id])
}

model Service {
  id            Int             @id @default(autoincrement())
  serviceName   String
  companies Company[]
}